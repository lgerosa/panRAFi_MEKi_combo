# exported from PySB model 'RAF_asymmetric_RAFi'

from pysb import Model, Monomer, Parameter, Expression, Compartment, Rule, Observable, Initial, MatchOnce, EnergyPattern, Annotation, MultiState, Tag, ANY, WILD, as_complex_pattern
from sympy import log

Model()

Monomer('R', ['r', 'i', 'state'], {'state': ['none', 'R1', 'R2']})
Monomer('I1', ['r'])
Monomer('I2', ['r'])

Parameter('R_0', 0.01)
Parameter('I1_0', 0.0)
Parameter('I2_0', 0.0)
Parameter('kr_1', 10.0)
Parameter('kf_1', 1.0)
Parameter('phi_1', 1.0)
Parameter('kr_2a', 0.1)
Parameter('kf_2a', 1.0)
Parameter('phi_2a', 1.0)
Parameter('kr_2b', 0.1)
Parameter('kf_2b', 1.0)
Parameter('phi_2b', 1.0)
Parameter('f_a', 1.0)
Parameter('f_b', 1.0)
Parameter('g_1a', 1.0)
Parameter('g_1b', 1.0)
Parameter('g_2a', 1.0)
Parameter('g_2b', 1.0)
Parameter('g_3a', 1.0)
Parameter('g_3b', 1.0)
Parameter('kcat', 1.0)
Parameter('plambda', 10.0)
Parameter('p1', 0.5)
Parameter('p2', 0.5)

Expression('Kd_1', kr_1/kf_1)
Expression('Gf_1', log(kr_1/kf_1))
Expression('Ea0_1', -phi_1*log(kr_1/kf_1) - log(kf_1))
Expression('Kd_2a', kr_2a/kf_2a)
Expression('Gf_2a', log(kr_2a/kf_2a))
Expression('Ea0_2a', -phi_2a*log(kr_2a/kf_2a) - log(kf_2a))
Expression('Kd_2b', kr_2b/kf_2b)
Expression('Gf_2b', log(kr_2b/kf_2b))
Expression('Ea0_2b', -phi_2b*log(kr_2b/kf_2b) - log(kf_2b))
Expression('Gf_fa', log(f_a))
Expression('Gf_fb', log(f_b))
Expression('Gf_g1a', log(g_1a))
Expression('Gf_g1b', log(g_1b))
Expression('Gf_g2a', log(g_2a))
Expression('Gf_g2b', log(g_2b))
Expression('Gf_g3a', log(g_3a))
Expression('Gf_g3b', log(g_3b))
Expression('Gf_g1a_fa', Gf_fa + Gf_g1a)
Expression('Gf_g1b_fb', Gf_fb + Gf_g1b)
Expression('Gf_g2a_g1a_fa', Gf_fa + Gf_g1a + Gf_g2a)
Expression('Gf_g2b_g1b_fb', Gf_fb + Gf_g1b + Gf_g2b)
Expression('Gf_g3a_g1b_fb', Gf_fb + Gf_g1b + Gf_g3a)
Expression('Gf_g3b_g1a_fa', Gf_fa + Gf_g1a + Gf_g3b)

Observable('R_obs', R(r=None, i=None), match='species')
Observable('RR_obs', R(r=1, i=None) % R(r=1, i=None), match='species')
Observable('R1R2I_obs', R(r=1, i=ANY, state='R1') % R(r=1, i=None, state='R2'), match='species')
Observable('R2R1I_obs', R(r=1, i=ANY, state='R2') % R(r=1, i=None, state='R1'), match='species')
Observable('IRRI_obs', R(r=1, i=ANY) % R(r=1, i=ANY), match='species')

Expression('R_active', kcat*(R_obs + plambda*(R1R2I_obs*p1 + R2R1I_obs*p2 + RR_obs)))

Rule('R1', R(r=None, state='none') + R(r=None, state='none') | R(r=1, state='R1') % R(r=1, state='R2'), phi_1, Ea0_1, energy=True)
Rule('R2a', R(i=None) + I1(r=None) | R(i=1) % I1(r=1), phi_2a, Ea0_2a, energy=True)
Rule('R2b', R(i=None) + I2(r=None) | R(i=1) % I2(r=1), phi_2b, Ea0_2b, energy=True)

EnergyPattern('ep_1', R(r=1) % R(r=1), Gf_1)
EnergyPattern('ep_2a', R(i=1) % I1(r=1), Gf_2a)
EnergyPattern('ep_3', R(i=1) % I2(r=1), Gf_2b)
EnergyPattern('ep_fa_R2R1I1', R(r=1, i=None, state='R2') % R(r=1, i=2, state='R1') % I1(r=2), Gf_fa)
EnergyPattern('ep_fb_R2R1I2', R(r=1, i=None, state='R2') % R(r=1, i=2, state='R1') % I2(r=2), Gf_fb)
EnergyPattern('ep_g1a_R1R2I1', R(r=1, i=None, state='R1') % R(r=1, i=2, state='R2') % I1(r=2), Gf_g1a_fa)
EnergyPattern('ep_g1b_R1R2I2', R(r=1, i=None, state='R1') % R(r=1, i=2, state='R2') % I2(r=2), Gf_g1b_fb)
EnergyPattern('ep_g2a_I1R1R2I1', I1(r=3) % R(r=1, i=3, state='R1') % R(r=1, i=2, state='R2') % I1(r=2), Gf_g2a_g1a_fa)
EnergyPattern('ep_g2b_I2R1R2I2', I2(r=3) % R(r=1, i=3, state='R1') % R(r=1, i=2, state='R2') % I2(r=2), Gf_g2b_g1b_fb)
EnergyPattern('ep_g3a_I1R1R2I2', I2(r=3) % R(r=1, i=3, state='R2') % R(r=1, i=2, state='R1') % I1(r=2), Gf_g3a_g1b_fb)
EnergyPattern('ep_g3b_I2R1R2I1', I1(r=3) % R(r=1, i=3, state='R2') % R(r=1, i=2, state='R1') % I2(r=2), Gf_g3b_g1a_fa)

Initial(R(r=None, i=None, state='none'), R_0)
Initial(I1(r=None), I1_0)
Initial(I2(r=None), I2_0)

